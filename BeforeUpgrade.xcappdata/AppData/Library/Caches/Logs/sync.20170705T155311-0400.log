2017-07-05 15:53:11.038 [Info] > XCGLogger writing log to: file:///var/mobile/Containers/Data/Application/9B39050B-DB28-4E6E-BA2B-1B08C5543C19/Library/Caches/Logs/sync.20170705T155311-0400.log
2017-07-05 15:53:11.040 [Info] [RollingFileLogger.swift:46] newLogWithDate > Created file destination for logger with root: sync and timestamp: 2017-07-05 19:53:11 +0000
2017-07-05 15:53:11.055 [Debug] [Profile.swift:239] init(localName:app:clear:) > Initing profile profile on thread <NSThread: 0x1740677c0>{number = 1, name = main}.
2017-07-05 15:53:11.075 [Debug] [BrowserDB.swift:56] init(filename:secretKey:files:) > Initializing BrowserDB: logins.db.
2017-07-05 15:53:11.086 [Debug] [BrowserDB.swift:66] init(filename:secretKey:files:) > Creating db: /private/var/mobile/Containers/Shared/AppGroup/7CFC3924-B25F-4F69-9424-9D3CD3D1C8D9/profile.profile/logins.db with secret = Optional("1wXL9XBZzF8eE7f4wJEftWQMkG7CjOB5mkCcjlcXmI7diTJdZ7Ty+Gy1xVtCTddW1dZwedH9o/NVSJ3lfMtJcbxIZjeFHUR4rLNdzkk1JSBq03GcpTImItszJTUCDi5kRLd9bXNkOS/l2N/qEzRyZgqVI4PlpyowlEPBFODGTZAnsC/RXllt5RxA4HVFhiOwKkaBeLu1PH1Kk20iufm8V2mU5tTq7ZKBUai3I5MVyLDJ4aEnzJnAvdVZvAUFpE6slZmXbnrtSATtBh/7v1CtlznkqN3R+79Us1X7Yi5pf1GwRbZ8NOGg+JI9yT5DJrGnEeEHmTd6ujqYxUCKZGhBRA==")
2017-07-05 15:53:11.088 [Debug] [SwiftData.swift:93] getSharedConnection() > >>> Creating shared SQLiteDBConnection for /private/var/mobile/Containers/Shared/AppGroup/7CFC3924-B25F-4F69-9424-9D3CD3D1C8D9/profile.profile/logins.db on thread <NSThread: 0x1740677c0>{number = 1, name = main}.
2017-07-05 15:53:11.088 [Debug] [SwiftData.swift:510] init(filename:flags:key:prevKey:) > Opening connection to /private/var/mobile/Containers/Shared/AppGroup/7CFC3924-B25F-4F69-9424-9D3CD3D1C8D9/profile.profile/logins.db.
2017-07-05 15:53:11.105 [Info] [SwiftData.swift:436] prepareEncrypted(_:key:prevKey:) > Enabling WAL mode.
2017-07-05 15:53:11.247 [Debug] [BrowserDB.swift:163] createOrUpdate > Create or update tableList version 1 on <NSThread: 0x1740677c0>{number = 1, name = main}.
2017-07-05 15:53:11.248 [Debug] [BrowserDB.swift:165] createOrUpdate > Doesn't exist. Creating table tableList.
2017-07-05 15:53:11.248 [Debug] [BrowserDB.swift:83] createTable(_:table:) > Try create tableList version 1
2017-07-05 15:53:11.258 [Debug] [BrowserDB.swift:77] init(filename:secretKey:files:) > db: /private/var/mobile/Containers/Shared/AppGroup/7CFC3924-B25F-4F69-9424-9D3CD3D1C8D9/profile.profile/logins.db has been created
2017-07-05 15:53:11.258 [Debug] [BrowserDB.swift:56] init(filename:secretKey:files:) > Initializing BrowserDB: browser.db.
2017-07-05 15:53:11.259 [Debug] [SwiftData.swift:93] getSharedConnection() > >>> Creating shared SQLiteDBConnection for /private/var/mobile/Containers/Shared/AppGroup/7CFC3924-B25F-4F69-9424-9D3CD3D1C8D9/profile.profile/browser.db on thread <NSThread: 0x1740677c0>{number = 1, name = main}.
2017-07-05 15:53:11.259 [Debug] [SwiftData.swift:510] init(filename:flags:key:prevKey:) > Opening connection to /private/var/mobile/Containers/Shared/AppGroup/7CFC3924-B25F-4F69-9424-9D3CD3D1C8D9/profile.profile/browser.db.
2017-07-05 15:53:11.262 [Info] [SwiftData.swift:475] prepareCleartext() > Enabling WAL mode.
2017-07-05 15:53:11.280 [Debug] [BrowserDB.swift:163] createOrUpdate > Create or update tableList version 1 on <NSThread: 0x1740677c0>{number = 1, name = main}.
2017-07-05 15:53:11.280 [Debug] [BrowserDB.swift:165] createOrUpdate > Doesn't exist. Creating table tableList.
2017-07-05 15:53:11.280 [Debug] [BrowserDB.swift:83] createTable(_:table:) > Try create tableList version 1
2017-07-05 15:53:11.292 [Debug] [BrowserDB.swift:77] init(filename:secretKey:files:) > db: /private/var/mobile/Containers/Shared/AppGroup/7CFC3924-B25F-4F69-9424-9D3CD3D1C8D9/profile.profile/browser.db has been created
2017-07-05 15:53:11.293 [Info] [Profile.swift:269] init(localName:app:clear:) > New profile. Removing old account metadata.
2017-07-05 15:53:11.302 [Debug] [SyncStateMachine.swift:83] clearStateFromPrefs > Clearing all Sync prefs.
2017-07-05 15:53:11.304 [Debug] [State.swift:460] clearFromPrefs > No key label; nothing to remove from keychain.
2017-07-05 15:53:11.424 [Debug] [Profile.swift:305] reopen() > Reopening profile.
2017-07-05 15:53:11.430 [Info] [BrowserTable.swift:124] init() > SQLite version: 3.8.8.3 (3008008).
2017-07-05 15:53:11.430 [Debug] [BrowserDB.swift:163] createOrUpdate > Create or update BROWSER version 21 on <NSThread: 0x174263500>{number = 4, name = (null)}.
2017-07-05 15:53:11.431 [Debug] [BrowserDB.swift:480] tablesExist > 0 tables exist. Expected 15
2017-07-05 15:53:11.432 [Debug] [BrowserDB.swift:165] createOrUpdate > Doesn't exist. Creating table BROWSER.
2017-07-05 15:53:11.432 [Debug] [BrowserDB.swift:83] createTable(_:table:) > Try create BROWSER version 21
2017-07-05 15:53:11.432 [Debug] [BrowserTable.swift:596] create > Creating 33 tables, views, and indices.
2017-07-05 15:53:11.533 [Debug] [SQLiteHistory.swift:124] init(db:prefs:) > Database succesfully created/updated
2017-07-05 15:53:11.534 [Info] [BrowserTable.swift:124] init() > SQLite version: 3.8.8.3 (3008008).
2017-07-05 15:53:11.535 [Debug] [BrowserDB.swift:163] createOrUpdate > Create or update BROWSER version 21 on <NSThread: 0x174263500>{number = 4, name = (null)}.
2017-07-05 15:53:11.536 [Debug] [BrowserDB.swift:480] tablesExist > 15 tables exist. Expected 15
2017-07-05 15:53:11.537 [Debug] [BrowserDB.swift:101] updateTable(_:table:) > Trying update BROWSER version 21
2017-07-05 15:53:11.539 [Debug] [BrowserDB.swift:175] createOrUpdate > Table BROWSER already exists.
2017-07-05 15:53:11.697 [Debug] [BrowserDB.swift:163] createOrUpdate > Create or update clients version 1 on <NSThread: 0x174461e00>{number = 6, name = (null)}.
2017-07-05 15:53:11.698 [Debug] [BrowserDB.swift:165] createOrUpdate > Doesn't exist. Creating table clients.
2017-07-05 15:53:11.698 [Debug] [BrowserDB.swift:83] createTable(_:table:) > Try create clients version 1
2017-07-05 15:53:11.700 [Debug] [BrowserDB.swift:163] createOrUpdate > Create or update tabs version 2 on <NSThread: 0x174461e00>{number = 6, name = (null)}.
2017-07-05 15:53:11.701 [Debug] [BrowserDB.swift:165] createOrUpdate > Doesn't exist. Creating table tabs.
2017-07-05 15:53:11.701 [Debug] [BrowserDB.swift:83] createTable(_:table:) > Try create tabs version 2
2017-07-05 15:53:11.702 [Debug] [BrowserDB.swift:163] createOrUpdate > Create or update commands version 1 on <NSThread: 0x174461e00>{number = 6, name = (null)}.
2017-07-05 15:53:11.703 [Debug] [BrowserDB.swift:165] createOrUpdate > Doesn't exist. Creating table commands.
2017-07-05 15:53:11.703 [Debug] [BrowserDB.swift:83] createTable(_:table:) > Try create commands version 1
2017-07-05 15:55:42.669 [Debug] [Profile.swift:974] beginTimedSyncs() > Starting sync timer.
2017-07-05 15:55:42.677 [Info] [Profile.swift:1105] syncWith > Syncing ["clients", "tabs", "logins", "bookmarks", "history"]
2017-07-05 15:55:42.707 [Debug] [SyncAuthState.swift:119] token(_:canBeExpired:) > Advancing Account state.
2017-07-05 15:55:42.725 [Debug] [FirefoxAccount.swift:208] advance() > no advance() in progress; setting and returning new shared deferred.
2017-07-05 15:55:42.726 [Debug] [FirefoxAccount.swift:180] advance() > advance already in progress; returning shared deferred.
2017-07-05 15:55:43.332 [Debug] [FirefoxAccount.swift:180] advance() > advance already in progress; returning shared deferred.
2017-07-05 15:55:43.408 [Info] [FxALoginStateMachine.swift:51] advanceOne(fromState:now:) > Advancing from state: engagedAfterVerified
2017-07-05 15:55:43.413 [Debug] [FxALoginStateMachine.swift:126] advanceOne(fromState:now:) > Fetching keys.
2017-07-05 15:55:43.888 [Info] [FxALoginStateMachine.swift:130] advanceOne(fromState:now:) > Unwrapped keys response.  Transition to CohabitingBeforeKeyPair.
2017-07-05 15:55:43.890 [Info] [FxALoginStateMachine.swift:51] advanceOne(fromState:now:) > Advancing from state: cohabitingBeforeKeyPair
2017-07-05 15:55:43.891 [Debug] [FxALoginStateMachine.swift:70] advanceOne(fromState:now:) > Generating key pair.
2017-07-05 15:55:44.197 [Info] [FxALoginStateMachine.swift:73] advanceOne(fromState:now:) > Generated key pair!  Transitioning to CohabitingAfterKeyPair.
2017-07-05 15:55:44.198 [Info] [FxALoginStateMachine.swift:51] advanceOne(fromState:now:) > Advancing from state: cohabitingAfterKeyPair
2017-07-05 15:55:44.199 [Debug] [FxALoginStateMachine.swift:86] advanceOne(fromState:now:) > Signing public key.
2017-07-05 15:55:44.323 [Info] [FxALoginStateMachine.swift:89] advanceOne(fromState:now:) > Signed public key!  Transitioning to Married.
2017-07-05 15:55:44.324 [Info] [FxALoginStateMachine.swift:51] advanceOne(fromState:now:) > Advancing from state: married
2017-07-05 15:55:44.324 [Debug] [FxALoginStateMachine.swift:55] advanceOne(fromState:now:) > Checking key pair freshness.
2017-07-05 15:55:44.324 [Debug] [FxALoginStateMachine.swift:60] advanceOne(fromState:now:) > Checking certificate freshness.
2017-07-05 15:55:44.325 [Info] [FxALoginStateMachine.swift:65] advanceOne(fromState:now:) > Key pair and certificate are fresh; staying Married.
2017-07-05 15:55:44.345 [Debug] [FirefoxAccount.swift:217] advance() > advance() completed and shared deferred is existing deferred; clearing shared deferred.
2017-07-05 15:55:44.345 [Info] [SyncAuthState.swift:122] token(_:canBeExpired:) > Account is in Married state; generating assertion.
2017-07-05 15:55:44.347 [Debug] [SyncAuthState.swift:127] token(_:canBeExpired:) > Fetching token server token.
2017-07-05 15:55:44.864 [Debug] [SyncAuthState.swift:136] token(_:canBeExpired:) > Fetched token server token!  Token expires at 1499288142703.
2017-07-05 15:55:44.869 [Debug] [SyncStateMachine.swift:111] toReady > Got token from auth state.
2017-07-05 15:55:44.872 [Debug] [State.swift:474] restoreFromPrefs(_:syncKeyBundle:) > No scratchpad found in prefs.
2017-07-05 15:55:44.874 [Info] [SyncStateMachine.swift:117] toReady > No persisted Sync state. Starting over.
2017-07-05 15:55:44.882 [Info] [SyncStateMachine.swift:121] toReady > Advancing to InitialWithLiveToken.
2017-07-05 15:55:44.885 [Info] [SyncStateMachine.swift:249] init(scratchpad:token:) > Inited initialWithLiveToken
2017-07-05 15:55:44.889 [Info] [SyncStateMachine.swift:89] advanceFromState > advanceFromState: InitialWithLiveToken
2017-07-05 15:55:45.430 [Debug] [StorageClient.swift:357] failFromResponse > Status code: 200.
2017-07-05 15:55:45.440 [Info] [SyncStateMachine.swift:249] init(scratchpad:token:) > Inited initialWithLiveTokenAndInfo
2017-07-05 15:55:45.441 [Info] [SyncStateMachine.swift:89] advanceFromState > advanceFromState: InitialWithLiveTokenAndInfo
2017-07-05 15:55:45.443 [Debug] [SyncStateMachine.swift:682] advance() > No cached meta/global found. Fetching fresh meta/global.
2017-07-05 15:55:45.908 [Debug] [StorageClient.swift:357] failFromResponse > Status code: 200.
2017-07-05 15:55:45.919 [Info] [SyncStateMachine.swift:233] init(client:scratchpad:token:) > Inited resolveMetaGlobalVersion
2017-07-05 15:55:45.920 [Info] [SyncStateMachine.swift:89] advanceFromState > advanceFromState: ResolveMetaGlobalVersion
2017-07-05 15:55:45.921 [Info] [SyncStateMachine.swift:233] init(client:scratchpad:token:) > Inited resolveMetaGlobalContent
2017-07-05 15:55:45.922 [Info] [SyncStateMachine.swift:89] advanceFromState > advanceFromState: ResolveMetaGlobalContent
2017-07-05 15:55:45.952 [Debug] [State.swift:510] pickle > Removing keys from Keychain.
2017-07-05 15:55:45.968 [Info] [SyncStateMachine.swift:233] init(client:scratchpad:token:) > Inited hasMetaGlobal
2017-07-05 15:55:45.970 [Info] [SyncStateMachine.swift:89] advanceFromState > advanceFromState: HasMetaGlobal
2017-07-05 15:55:45.971 [Debug] [SyncStateMachine.swift:743] advance() > No cached keys found. Fetching fresh keys.
2017-07-05 15:55:45.972 [Info] [SyncStateMachine.swift:233] init(client:scratchpad:token:) > Inited needsFreshCryptoKeys
2017-07-05 15:55:45.973 [Info] [SyncStateMachine.swift:89] advanceFromState > advanceFromState: NeedsFreshCryptoKeys
2017-07-05 15:55:46.092 [Debug] [StorageClient.swift:357] failFromResponse > Status code: 200.
2017-07-05 15:55:46.109 [Debug] [State.swift:503] pickle > Storing keys in Keychain with label keys.07mdBsoVqDv-.
2017-07-05 15:55:46.196 [Info] [SyncStateMachine.swift:233] init(client:scratchpad:token:) > Inited hasFreshCryptoKeys
2017-07-05 15:55:46.201 [Info] [SyncStateMachine.swift:89] advanceFromState > advanceFromState: HasFreshCryptoKeys
2017-07-05 15:55:46.202 [Info] [SyncStateMachine.swift:233] init(client:scratchpad:token:) > Inited ready
2017-07-05 15:55:46.203 [Info] [SyncStateMachine.swift:89] advanceFromState > advanceFromState: Ready
2017-07-05 15:55:46.205 [Debug] [Profile.swift:1034] takeActionsOnEngineStateChanges > Already resetting clients (and tabs); not bothering to also reset tabs again.
2017-07-05 15:55:46.220 [Debug] [Downloader.swift:56] resetDownloaderWithPrefs(_:collection:) > Resetting downloader prefs profile.sync.synchronizer.bookmarks..downloader.bookmarks... Previous values: nil, nil.
2017-07-05 15:55:46.223 [Debug] [BrowserDB.swift:163] createOrUpdate > Create or update LOGINS version 3 on <NSThread: 0x17447ea80>{number = 12, name = (null)}.
2017-07-05 15:55:46.224 [Debug] [BrowserDB.swift:480] tablesExist > 0 tables exist. Expected 2
2017-07-05 15:55:46.225 [Debug] [BrowserDB.swift:165] createOrUpdate > Doesn't exist. Creating table LOGINS.
2017-07-05 15:55:46.225 [Debug] [BrowserDB.swift:83] createTable(_:table:) > Try create LOGINS version 3
2017-07-05 15:55:46.239 [Debug] [BrowserDB.swift:399] write(_:withArgs:) > Modified rows: 0.
2017-07-05 15:55:46.247 [Debug] [Downloader.swift:56] resetDownloaderWithPrefs(_:collection:) > Resetting downloader prefs profile.sync.synchronizer.passwords..downloader.passwords... Previous values: nil, nil.
2017-07-05 15:55:46.251 [Debug] [Downloader.swift:56] resetDownloaderWithPrefs(_:collection:) > Resetting downloader prefs profile.sync.synchronizer.history..downloader.history... Previous values: nil, nil.
2017-07-05 15:55:46.258 [Debug] [State.swift:503] pickle > Storing keys in Keychain with label keys.07mdBsoVqDv-.
2017-07-05 15:55:46.294 [Debug] [Profile.swift:1113] syncWith > Syncing clients…
2017-07-05 15:55:46.296 [Debug] [Profile.swift:991] syncClientsWithDelegate(_:prefs:ready:) > Syncing clients to storage.
2017-07-05 15:55:46.297 [Info] [Synchronizer.swift:156] init(scratchpad:delegate:basePrefs:collection:) > Synchronizer configured with prefs 'profile.sync.synchronizer.clients...'
2017-07-05 15:55:46.298 [Debug] [ClientsSynchronizer.swift:331] synchronizeLocalClients(_:withServer:info:) > Synchronizing clients.
2017-07-05 15:55:46.300 [Debug] [StorageClient.swift:757] getSince(_:sort:limit:offset:) > Issuing GET with newer = 0, offset = nil, sort = nil.
2017-07-05 15:55:46.470 [Debug] [StorageClient.swift:357] failFromResponse > Status code: 200.
2017-07-05 15:55:46.489 [Debug] [ClientsSynchronizer.swift:282] applyStorageResponse(_:toLocalClients:withServer:) > Applying clients response.
2017-07-05 15:55:46.490 [Debug] [ClientsSynchronizer.swift:287] applyStorageResponse(_:toLocalClients:withServer:) > Got 4 client records.
2017-07-05 15:55:46.497 [Debug] [GenericTable.swift:169] insert(_:item:err:) > INSERT did not change last inserted row ID.
2017-07-05 15:55:46.525 [Debug] [ClientsSynchronizer.swift:179] processCommandsFromRecord(_:withServer:) > Processing commands from downloaded record.
2017-07-05 15:55:46.527 [Debug] [ClientsSynchronizer.swift:263] maybeUploadOurRecord(_:ifUnmodifiedSince:toServer:) > Should we upload our client record? Caller = false, expired = true.
2017-07-05 15:55:46.693 [Debug] [StorageClient.swift:357] failFromResponse > Status code: 200.
2017-07-05 15:55:46.697 [Debug] [ClientsSynchronizer.swift:274] maybeUploadOurRecord(_:ifUnmodifiedSince:toServer:) > Client record upload succeeded. New timestamp: 1499284535680.
2017-07-05 15:55:46.704 [Debug] [SQLiteRemoteClientsAndTabs.swift:324] getCommands() > Found 0 client sync commands in the DB.
2017-07-05 15:55:46.708 [Debug] [ClientsSynchronizer.swift:320] applyStorageResponse(_:toLocalClients:withServer:) > Running 0 commands.
2017-07-05 15:55:46.714 [Debug] [Profile.swift:1113] syncWith > Syncing tabs…
2017-07-05 15:55:46.717 [Info] [Synchronizer.swift:156] init(scratchpad:delegate:basePrefs:collection:) > Synchronizer configured with prefs 'profile.sync.synchronizer.tabs...'
2017-07-05 15:55:46.720 [Debug] [StorageClient.swift:757] getSince(_:sort:limit:offset:) > Issuing GET with newer = 0, offset = nil, sort = nil.
2017-07-05 15:55:46.883 [Debug] [StorageClient.swift:357] failFromResponse > Status code: 200.
2017-07-05 15:55:46.899 [Info] [TabsSynchronizer.swift:131] onResponseReceived > Last fetch was 0. Wiping tabs.
2017-07-05 15:55:46.901 [Debug] [TabsSynchronizer.swift:105] afterWipe() > Got 4 tab records.
2017-07-05 15:55:46.949 [Debug] [SQLiteRemoteClientsAndTabs.swift:179] getTabsForClientWithGUID > Looking for tabs for client with guid: nil
2017-07-05 15:55:46.953 [Debug] [SQLiteRemoteClientsAndTabs.swift:182] getTabsForClientWithGUID > Found 0 tabs for client with guid: nil
2017-07-05 15:55:46.955 [Debug] [TabsSynchronizer.swift:68] uploadOurTabs(_:toServer:) > Uploading our tabs: 0.
2017-07-05 15:55:47.078 [Debug] [StorageClient.swift:357] failFromResponse > Status code: 200.
2017-07-05 15:55:47.083 [Debug] [TabsSynchronizer.swift:75] uploadOurTabs(_:toServer:) > Tabs record upload succeeded. New timestamp: 1499284536110.
2017-07-05 15:55:47.089 [Debug] [Profile.swift:1113] syncWith > Syncing logins…
2017-07-05 15:55:47.092 [Debug] [Profile.swift:1009] syncLoginsWithDelegate(_:prefs:ready:) > Syncing logins to storage.
2017-07-05 15:55:47.093 [Info] [Synchronizer.swift:156] init(scratchpad:delegate:basePrefs:collection:) > Synchronizer configured with prefs 'profile.sync.synchronizer.passwords...'
2017-07-05 15:55:47.095 [Debug] [LoginsSynchronizer.swift:169] synchronizeLocalLogins(_:withServer:info:) > Synchronizing passwords. Last fetched: 0.
2017-07-05 15:55:47.097 [Debug] [StorageClient.swift:757] getSince(_:sort:limit:offset:) > Issuing GET with newer = 0, offset = nil, sort = nil.
2017-07-05 15:55:47.214 [Debug] [StorageClient.swift:357] failFromResponse > Status code: 200.
2017-07-05 15:55:47.223 [Debug] [LoginsSynchronizer.swift:174] synchronizeLocalLogins(_:withServer:info:) > Applying incoming password records from response timestamped 1499284536240, last modified 1499266394390.
2017-07-05 15:55:47.225 [Debug] [LoginsSynchronizer.swift:175] synchronizeLocalLogins(_:withServer:info:) > Records header hint: Optional(1)
2017-07-05 15:55:47.237 [Debug] [SQLiteLogins.swift:734] applyChangedLogin(_:local:mirror:) > Never seen remote record {9c2442fa-646e-1943-9fa2-eb4e73bc39cd}. Mirroring.
2017-07-05 15:55:47.245 [Debug] [IndependentRecordSynchronizer.swift:54] done() > Bumping fetch timestamp to 1499266394390.
2017-07-05 15:55:47.260 [Debug] [IndependentRecordSynchronizer.swift:88] uploadRecords(_:lastTimestamp:storageClient:onUpload:) > No modified records to upload.
2017-07-05 15:55:47.263 [Debug] [Profile.swift:1113] syncWith > Syncing bookmarks…
2017-07-05 15:55:47.265 [Debug] [Profile.swift:1015] mirrorBookmarksWithDelegate(_:prefs:ready:) > Synchronizing server bookmarks to storage.
2017-07-05 15:55:47.267 [Info] [Synchronizer.swift:156] init(scratchpad:delegate:basePrefs:collection:) > Synchronizer configured with prefs 'profile.sync.synchronizer.bookmarks...'
2017-07-05 15:55:47.268 [Debug] [Profile.swift:1191] greenLight() > Checking green light. Backgrounded: false.
2017-07-05 15:55:47.270 [Info] [Downloader.swift:45] init(collectionClient:basePrefs:collection:) > Downloader configured with prefs 'profile.sync.synchronizer.bookmarks..downloader.bookmarks..'.
2017-07-05 15:55:47.271 [Debug] [BookmarksDownloader.swift:119] go(info:greenLight:) > Downloading up to 100 records.
2017-07-05 15:55:47.272 [Debug] [Downloader.swift:127] go(_:limit:) > Modified: 1499266423250; last 0.
2017-07-05 15:55:47.274 [Debug] [Downloader.swift:157] downloadNextBatchWithLimit(_:infoModified:) > Fetching newer=0, offset=nil.
2017-07-05 15:55:47.277 [Debug] [StorageClient.swift:757] getSince(_:sort:limit:offset:) > Issuing GET with newer = 0, offset = nil, sort = Optional(Sync.SortOption.OldestFirst).
2017-07-05 15:55:47.397 [Debug] [StorageClient.swift:357] failFromResponse > Status code: 200.
2017-07-05 15:55:47.415 [Warning] [BookmarkPayload.swift:309] isValid() > Bookmark iRCE_U8qrWRn missing tags array. We'll replace with an empty array.
2017-07-05 15:55:47.428 [Warning] [BookmarkPayload.swift:309] isValid() > Bookmark Ql8EPXQCGjcv missing tags array. We'll replace with an empty array.
2017-07-05 15:55:47.459 [Debug] [Downloader.swift:175] handleSuccess > Handling success.
2017-07-05 15:55:47.460 [Debug] [Downloader.swift:209] handleSuccess > Got success response with 16 records.
2017-07-05 15:55:47.462 [Info] [BookmarksDownloader.swift:128] go(info:greenLight:) > Done with batched mirroring.
2017-07-05 15:55:47.466 [Warning] [BookmarkPayload.swift:309] isValid() > Bookmark iRCE_U8qrWRn missing tags array. We'll replace with an empty array.
2017-07-05 15:55:47.471 [Warning] [BookmarkPayload.swift:309] isValid() > Bookmark Ql8EPXQCGjcv missing tags array. We'll replace with an empty array.
2017-07-05 15:55:47.488 [Warning] [BookmarkPayload.swift:309] isValid() > Bookmark iRCE_U8qrWRn missing tags array. We'll replace with an empty array.
2017-07-05 15:55:47.498 [Warning] [BookmarkPayload.swift:309] isValid() > Bookmark Ql8EPXQCGjcv missing tags array. We'll replace with an empty array.
2017-07-05 15:55:47.516 [Debug] [BookmarksDownloader.swift:109] applyRecordsFromBatcher() > Applying 16 downloaded bookmarks.
2017-07-05 15:55:47.535 [Debug] [SQLiteBookmarksSyncing.swift:477] applyRecords(_:withMaxVars:) > 5 folders and 0 deleted maybe-folders to drop from buffer structure table.
2017-07-05 15:55:47.536 [Debug] [SQLiteBookmarksSyncing.swift:345] deleteStructureForGUIDs(_:fromTable:connection:withMaxVars:) > Deleting 5 parents from bookmarksBufferStructure.
2017-07-05 15:55:47.538 [Debug] [SQLiteBookmarksSyncing.swift:485] applyRecords(_:withMaxVars:) > Inserting 12 children.
2017-07-05 15:55:47.540 [Debug] [SQLiteBookmarksSyncing.swift:373] insertStructureIntoTable(_:connection:children:maxVars:) > Inserting 12 records (out of 12).
2017-07-05 15:55:47.551 [Debug] [Downloader.swift:192] handleSuccess > Advancing baseTimestamp to 1499266423250 - 1
2017-07-05 15:55:47.552 [Debug] [Downloader.swift:204] handleSuccess > Advancing lastModified to Optional(1499266423250) ?? 1499266423250.
2017-07-05 15:55:47.558 [Debug] [BrowserDB.swift:312] checkpoint() > Checkpointing a BrowserDB.
2017-07-05 15:55:47.559 [Debug] [SwiftData.swift:561] checkpoint > Running WAL checkpoint on /private/var/mobile/Containers/Shared/AppGroup/7CFC3924-B25F-4F69-9424-9D3CD3D1C8D9/profile.profile/browser.db on thread <NSThread: 0x170876c40>{number = 13, name = (null)}.
2017-07-05 15:55:47.560 [Debug] [SwiftData.swift:563] checkpoint > WAL checkpoint done on /private/var/mobile/Containers/Shared/AppGroup/7CFC3924-B25F-4F69-9424-9D3CD3D1C8D9/profile.profile/browser.db.
2017-07-05 15:55:47.562 [Debug] [BookmarksSynchronizer.swift:127] synchronizeBookmarksToStorage(_:usingBuffer:withServer:info:greenLight:) > Validating completed buffer download.
2017-07-05 15:55:47.567 [Info] [BookmarksSynchronizer.swift:148] synchronizeBookmarksToStorage(_:usingBuffer:withServer:info:greenLight:) > Bookmark mirroring took 296983µs. Result was Completed
2017-07-05 15:55:47.569 [Debug] [Profile.swift:1113] syncWith > Syncing history…
2017-07-05 15:55:47.571 [Debug] [Profile.swift:1003] syncHistoryWithDelegate(_:prefs:ready:) > Syncing history to storage.
2017-07-05 15:55:47.572 [Info] [Synchronizer.swift:156] init(scratchpad:delegate:basePrefs:collection:) > Synchronizer configured with prefs 'profile.sync.synchronizer.history...'
2017-07-05 15:55:47.573 [Debug] [Profile.swift:1191] greenLight() > Checking green light. Backgrounded: false.
2017-07-05 15:55:47.574 [Info] [Downloader.swift:45] init(collectionClient:basePrefs:collection:) > Downloader configured with prefs 'profile.sync.synchronizer.history..downloader.history..'.
2017-07-05 15:55:47.579 [Debug] [Downloader.swift:127] go(_:limit:) > Modified: 1499277309690; last 0.
2017-07-05 15:55:47.580 [Debug] [Downloader.swift:157] downloadNextBatchWithLimit(_:infoModified:) > Fetching newer=0, offset=nil.
2017-07-05 15:55:47.582 [Debug] [StorageClient.swift:757] getSince(_:sort:limit:offset:) > Issuing GET with newer = 0, offset = nil, sort = Optional(Sync.SortOption.OldestFirst).
2017-07-05 15:55:47.704 [Debug] [StorageClient.swift:357] failFromResponse > Status code: 200.
2017-07-05 15:55:47.736 [Debug] [Downloader.swift:175] handleSuccess > Handling success.
2017-07-05 15:55:47.736 [Debug] [Downloader.swift:209] handleSuccess > Got success response with 10 records.
2017-07-05 15:55:47.738 [Info] [HistorySynchronizer.swift:219] onBatchResult > Done with batched mirroring.
2017-07-05 15:55:47.995 [Debug] [Profile.swift:752] onBookmarkBufferValidated(notification:) > Payload is: 
2017-07-05 15:55:48.099 [Debug] [Downloader.swift:192] handleSuccess > Advancing baseTimestamp to 1499277309690 - 1
2017-07-05 15:55:48.100 [Debug] [Downloader.swift:204] handleSuccess > Advancing lastModified to Optional(1499277309690) ?? 1499277309690.
2017-07-05 15:55:48.105 [Debug] [BrowserDB.swift:312] checkpoint() > Checkpointing a BrowserDB.
2017-07-05 15:55:48.105 [Debug] [SwiftData.swift:561] checkpoint > Running WAL checkpoint on /private/var/mobile/Containers/Shared/AppGroup/7CFC3924-B25F-4F69-9424-9D3CD3D1C8D9/profile.profile/browser.db on thread <NSThread: 0x170879600>{number = 14, name = (null)}.
2017-07-05 15:55:48.106 [Debug] [SwiftData.swift:563] checkpoint > WAL checkpoint done on /private/var/mobile/Containers/Shared/AppGroup/7CFC3924-B25F-4F69-9424-9D3CD3D1C8D9/profile.profile/browser.db.
2017-07-05 15:55:48.109 [Info] [HistorySynchronizer.swift:164] uploadOutgoingFromStorage(_:lastTimestamp:withServer:) > Uploading 0 deleted places.
2017-07-05 15:55:48.110 [Debug] [IndependentRecordSynchronizer.swift:88] uploadRecords(_:lastTimestamp:storageClient:onUpload:) > No modified records to upload.
2017-07-05 15:55:48.117 [Info] [HistorySynchronizer.swift:175] uploadOutgoingFromStorage(_:lastTimestamp:withServer:) > Uploading 0 modified places.
2017-07-05 15:55:48.118 [Info] [HistorySynchronizer.swift:126] uploadModifiedPlaces(_:lastTimestamp:fromStorage:withServer:) > Preparing upload…
2017-07-05 15:55:48.120 [Debug] [HistorySynchronizer.swift:189] uploadOutgoingFromStorage(_:lastTimestamp:withServer:) > Done syncing. Work was done? false
2017-07-05 15:55:48.121 [Debug] [HistorySynchronizer.swift:191] uploadOutgoingFromStorage(_:lastTimestamp:withServer:) > Done.
2017-07-05 15:55:48.122 [Info] [Profile.swift:686] endSyncing > Ending all queued syncs.
2017-07-05 15:55:48.124 [Debug] [SyncStatusResolver.swift:73] resolveResults() > Sync status for clients: completed
2017-07-05 15:55:48.124 [Debug] [SyncStatusResolver.swift:73] resolveResults() > Sync status for tabs: completed
2017-07-05 15:55:48.124 [Debug] [SyncStatusResolver.swift:73] resolveResults() > Sync status for logins: completed
2017-07-05 15:55:48.125 [Debug] [SyncStatusResolver.swift:73] resolveResults() > Sync status for bookmarks: completed
2017-07-05 15:55:48.125 [Debug] [SyncStatusResolver.swift:73] resolveResults() > Sync status for history: completed
2017-07-05 15:55:48.126 [Debug] [SyncStatusResolver.swift:133] resolveResults() > Resolved sync display state: good
2017-07-05 15:55:48.131 [Debug] [Profile.swift:765] onBookmarkBufferValidated(notification:) > Bookmark validation upload response: -1.
2017-07-05 15:56:00.549 [Debug] [Profile.swift:984] endTimedSyncs() > Stopping sync timer.
2017-07-05 15:56:00.558 [Info] [Profile.swift:1105] syncWith > Syncing ["clients", "tabs", "logins", "bookmarks", "history"]
2017-07-05 15:56:00.560 [Info] [SyncAuthState.swift:114] token(_:canBeExpired:) > Returning cached token, which should be valid.
2017-07-05 15:56:00.563 [Debug] [SyncStateMachine.swift:111] toReady > Got token from auth state.
2017-07-05 15:56:00.586 [Debug] [State.swift:416] unpickleV1FromPrefs(_:syncKeyBundle:) > Read keys from Keychain with label 07mdBsoVqDv-.
2017-07-05 15:56:00.587 [Info] [SyncStateMachine.swift:121] toReady > Advancing to InitialWithLiveToken.
2017-07-05 15:56:00.587 [Info] [SyncStateMachine.swift:249] init(scratchpad:token:) > Inited initialWithLiveToken
2017-07-05 15:56:00.588 [Info] [SyncStateMachine.swift:89] advanceFromState > advanceFromState: InitialWithLiveToken
2017-07-05 15:56:01.743 [Debug] [StorageClient.swift:357] failFromResponse > Status code: 200.
2017-07-05 15:56:01.751 [Info] [SyncStateMachine.swift:249] init(scratchpad:token:) > Inited initialWithLiveTokenAndInfo
2017-07-05 15:56:01.756 [Info] [SyncStateMachine.swift:89] advanceFromState > advanceFromState: InitialWithLiveTokenAndInfo
2017-07-05 15:56:01.759 [Debug] [SyncStateMachine.swift:667] advance() > Cached meta/global fetched at 1499284534930, newer than server modified 1499266342220. Using cached meta/global.
2017-07-05 15:56:01.760 [Info] [SyncStateMachine.swift:233] init(client:scratchpad:token:) > Inited hasMetaGlobal
2017-07-05 15:56:01.762 [Info] [SyncStateMachine.swift:89] advanceFromState > advanceFromState: HasMetaGlobal
2017-07-05 15:56:01.762 [Debug] [SyncStateMachine.swift:725] advance() > Cached keys fetched at 1499284535120, newer than server modified 1499266342390. Using cached keys.
2017-07-05 15:56:01.763 [Info] [SyncStateMachine.swift:233] init(client:scratchpad:token:) > Inited hasFreshCryptoKeys
2017-07-05 15:56:01.763 [Info] [SyncStateMachine.swift:89] advanceFromState > advanceFromState: HasFreshCryptoKeys
2017-07-05 15:56:01.764 [Info] [SyncStateMachine.swift:233] init(client:scratchpad:token:) > Inited ready
2017-07-05 15:56:01.764 [Info] [SyncStateMachine.swift:89] advanceFromState > advanceFromState: Ready
2017-07-05 15:56:01.765 [Debug] [Profile.swift:1025] takeActionsOnEngineStateChanges > No collections need reset. Moving on.
2017-07-05 15:56:01.766 [Debug] [Profile.swift:1113] syncWith > Syncing clients…
2017-07-05 15:56:01.769 [Debug] [Profile.swift:991] syncClientsWithDelegate(_:prefs:ready:) > Syncing clients to storage.
2017-07-05 15:56:01.769 [Info] [Synchronizer.swift:156] init(scratchpad:delegate:basePrefs:collection:) > Synchronizer configured with prefs 'profile.sync.synchronizer.clients...'
2017-07-05 15:56:01.770 [Debug] [ClientsSynchronizer.swift:331] synchronizeLocalClients(_:withServer:info:) > Synchronizing clients.
2017-07-05 15:56:01.771 [Debug] [StorageClient.swift:757] getSince(_:sort:limit:offset:) > Issuing GET with newer = 1499277701150, offset = nil, sort = nil.
2017-07-05 15:56:02.382 [Debug] [StorageClient.swift:357] failFromResponse > Status code: 200.
2017-07-05 15:56:02.393 [Debug] [ClientsSynchronizer.swift:282] applyStorageResponse(_:toLocalClients:withServer:) > Applying clients response.
2017-07-05 15:56:02.396 [Debug] [ClientsSynchronizer.swift:287] applyStorageResponse(_:toLocalClients:withServer:) > Got 1 client records.
2017-07-05 15:56:02.398 [Debug] [ClientsSynchronizer.swift:301] applyStorageResponse(_:toLocalClients:withServer:) > Skipping our own unmodified record.
2017-07-05 15:56:02.400 [Debug] [ClientsSynchronizer.swift:179] processCommandsFromRecord(_:withServer:) > Processing commands from downloaded record.
2017-07-05 15:56:02.402 [Debug] [ClientsSynchronizer.swift:263] maybeUploadOurRecord(_:ifUnmodifiedSince:toServer:) > Should we upload our client record? Caller = false, expired = false.
2017-07-05 15:56:02.404 [Debug] [SQLiteRemoteClientsAndTabs.swift:324] getCommands() > Found 0 client sync commands in the DB.
2017-07-05 15:56:02.409 [Debug] [ClientsSynchronizer.swift:320] applyStorageResponse(_:toLocalClients:withServer:) > Running 0 commands.
2017-07-05 15:56:02.414 [Debug] [Profile.swift:1113] syncWith > Syncing tabs…
2017-07-05 15:56:02.425 [Info] [Synchronizer.swift:156] init(scratchpad:delegate:basePrefs:collection:) > Synchronizer configured with prefs 'profile.sync.synchronizer.tabs...'
2017-07-05 15:56:02.427 [Debug] [StorageClient.swift:757] getSince(_:sort:limit:offset:) > Issuing GET with newer = 1499277701540, offset = nil, sort = nil.
2017-07-05 15:56:02.519 [Debug] [StorageClient.swift:357] failFromResponse > Status code: 200.
2017-07-05 15:56:02.526 [Debug] [TabsSynchronizer.swift:105] afterWipe() > Got 1 tab records.
2017-07-05 15:56:02.529 [Debug] [TabsSynchronizer.swift:114] afterWipe() > Filtered 1 records down to 0.
2017-07-05 15:56:02.534 [Debug] [TabsSynchronizer.swift:54] uploadOurTabs(_:toServer:) > Not uploading tabs: already did so at 1499284536110.
2017-07-05 15:56:02.535 [Debug] [Profile.swift:1113] syncWith > Syncing logins…
2017-07-05 15:56:02.545 [Debug] [Profile.swift:1009] syncLoginsWithDelegate(_:prefs:ready:) > Syncing logins to storage.
2017-07-05 15:56:02.546 [Info] [Synchronizer.swift:156] init(scratchpad:delegate:basePrefs:collection:) > Synchronizer configured with prefs 'profile.sync.synchronizer.passwords...'
2017-07-05 15:56:02.547 [Debug] [LoginsSynchronizer.swift:169] synchronizeLocalLogins(_:withServer:info:) > Synchronizing passwords. Last fetched: 1499266394390.
2017-07-05 15:56:02.548 [Debug] [StorageClient.swift:757] getSince(_:sort:limit:offset:) > Issuing GET with newer = 1499266394390, offset = nil, sort = nil.
2017-07-05 15:56:02.648 [Debug] [StorageClient.swift:357] failFromResponse > Status code: 200.
2017-07-05 15:56:02.651 [Debug] [LoginsSynchronizer.swift:174] synchronizeLocalLogins(_:withServer:info:) > Applying incoming password records from response timestamped 1499284551680, last modified 1499266394390.
2017-07-05 15:56:02.652 [Debug] [LoginsSynchronizer.swift:175] synchronizeLocalLogins(_:withServer:info:) > Records header hint: Optional(0)
2017-07-05 15:56:02.652 [Debug] [IndependentRecordSynchronizer.swift:60] applyIncomingToStorage(_:fetched:apply:) > No records; done applying.
2017-07-05 15:56:02.653 [Debug] [IndependentRecordSynchronizer.swift:54] done() > Bumping fetch timestamp to 1499266394390.
2017-07-05 15:56:02.660 [Debug] [IndependentRecordSynchronizer.swift:88] uploadRecords(_:lastTimestamp:storageClient:onUpload:) > No modified records to upload.
2017-07-05 15:56:02.662 [Debug] [Profile.swift:1113] syncWith > Syncing bookmarks…
2017-07-05 15:56:02.669 [Debug] [Profile.swift:1015] mirrorBookmarksWithDelegate(_:prefs:ready:) > Synchronizing server bookmarks to storage.
2017-07-05 15:56:02.670 [Info] [Synchronizer.swift:156] init(scratchpad:delegate:basePrefs:collection:) > Synchronizer configured with prefs 'profile.sync.synchronizer.bookmarks...'
2017-07-05 15:56:02.670 [Debug] [Profile.swift:1191] greenLight() > Checking green light. Backgrounded: true.
2017-07-05 15:56:02.671 [Info] [Downloader.swift:45] init(collectionClient:basePrefs:collection:) > Downloader configured with prefs 'profile.sync.synchronizer.bookmarks..downloader.bookmarks..'.
2017-07-05 15:56:02.672 [Debug] [BookmarksDownloader.swift:119] go(info:greenLight:) > Downloading up to 100 records.
2017-07-05 15:56:02.672 [Debug] [Downloader.swift:127] go(_:limit:) > Modified: 1499266423250; last 1499266423250.
2017-07-05 15:56:02.679 [Debug] [Downloader.swift:129] go(_:limit:) > No more data to batch-download.
2017-07-05 15:56:02.681 [Info] [BookmarksDownloader.swift:143] go(info:greenLight:) > No new data. No need to continue batching.
2017-07-05 15:56:02.682 [Debug] [BookmarksSynchronizer.swift:127] synchronizeBookmarksToStorage(_:usingBuffer:withServer:info:greenLight:) > Validating completed buffer download.
2017-07-05 15:56:02.684 [Info] [BookmarksSynchronizer.swift:148] synchronizeBookmarksToStorage(_:usingBuffer:withServer:info:greenLight:) > Bookmark mirroring took 13167µs. Result was Completed
2017-07-05 15:56:02.685 [Debug] [Profile.swift:1113] syncWith > Syncing history…
2017-07-05 15:56:02.702 [Debug] [Profile.swift:1003] syncHistoryWithDelegate(_:prefs:ready:) > Syncing history to storage.
2017-07-05 15:56:02.703 [Info] [Synchronizer.swift:156] init(scratchpad:delegate:basePrefs:collection:) > Synchronizer configured with prefs 'profile.sync.synchronizer.history...'
2017-07-05 15:56:02.703 [Debug] [Profile.swift:1191] greenLight() > Checking green light. Backgrounded: true.
2017-07-05 15:56:02.704 [Info] [Downloader.swift:45] init(collectionClient:basePrefs:collection:) > Downloader configured with prefs 'profile.sync.synchronizer.history..downloader.history..'.
2017-07-05 15:56:02.704 [Debug] [Downloader.swift:127] go(_:limit:) > Modified: 1499277309690; last 1499277309690.
2017-07-05 15:56:02.707 [Debug] [Downloader.swift:129] go(_:limit:) > No more data to batch-download.
2017-07-05 15:56:02.712 [Info] [HistorySynchronizer.swift:232] onBatchResult > No new data. No need to continue batching.
2017-07-05 15:56:02.713 [Info] [HistorySynchronizer.swift:164] uploadOutgoingFromStorage(_:lastTimestamp:withServer:) > Uploading 0 deleted places.
2017-07-05 15:56:02.714 [Debug] [IndependentRecordSynchronizer.swift:88] uploadRecords(_:lastTimestamp:storageClient:onUpload:) > No modified records to upload.
2017-07-05 15:56:02.716 [Info] [HistorySynchronizer.swift:175] uploadOutgoingFromStorage(_:lastTimestamp:withServer:) > Uploading 0 modified places.
2017-07-05 15:56:02.717 [Info] [HistorySynchronizer.swift:126] uploadModifiedPlaces(_:lastTimestamp:fromStorage:withServer:) > Preparing upload…
2017-07-05 15:56:02.728 [Debug] [HistorySynchronizer.swift:189] uploadOutgoingFromStorage(_:lastTimestamp:withServer:) > Done syncing. Work was done? false
2017-07-05 15:56:02.729 [Debug] [HistorySynchronizer.swift:191] uploadOutgoingFromStorage(_:lastTimestamp:withServer:) > Done.
2017-07-05 15:56:02.730 [Info] [Profile.swift:686] endSyncing > Ending all queued syncs.
2017-07-05 15:56:02.731 [Debug] [Profile.swift:313] shutdown() > Shutting down profile.
2017-07-05 15:56:02.731 [Debug] [SyncStatusResolver.swift:73] resolveResults() > Sync status for clients: completed
2017-07-05 15:56:02.732 [Debug] [SwiftData.swift:534] deinit > deinit: closing connection on thread <NSThread: 0x1740677c0>{number = 1, name = main}.
2017-07-05 15:56:02.732 [Debug] [SyncStatusResolver.swift:73] resolveResults() > Sync status for tabs: completed
2017-07-05 15:56:02.733 [Debug] [SwiftData.swift:601] closeCustomConnection(immediately:) > Closing custom connection for /private/var/mobile/Containers/Shared/AppGroup/7CFC3924-B25F-4F69-9424-9D3CD3D1C8D9/profile.profile/browser.db on <NSThread: 0x1740677c0>{number = 1, name = main}.
2017-07-05 15:56:02.733 [Debug] [SyncStatusResolver.swift:73] resolveResults() > Sync status for logins: completed
2017-07-05 15:56:02.734 [Debug] [SyncStatusResolver.swift:73] resolveResults() > Sync status for bookmarks: completed
2017-07-05 15:56:02.735 [Debug] [SyncStatusResolver.swift:73] resolveResults() > Sync status for history: completed
2017-07-05 15:56:02.735 [Debug] [SyncStatusResolver.swift:133] resolveResults() > Resolved sync display state: good
2017-07-05 15:56:02.742 [Debug] [SwiftData.swift:621] closeCustomConnection(immediately:) > Closed /private/var/mobile/Containers/Shared/AppGroup/7CFC3924-B25F-4F69-9424-9D3CD3D1C8D9/profile.profile/browser.db.
2017-07-05 15:56:02.743 [Debug] [SwiftData.swift:534] deinit > deinit: closing connection on thread <NSThread: 0x1740677c0>{number = 1, name = main}.
2017-07-05 15:56:02.743 [Warning] [SwiftData.swift:88] getSharedConnection() > >>> Database is closed for /private/var/mobile/Containers/Shared/AppGroup/7CFC3924-B25F-4F69-9424-9D3CD3D1C8D9/profile.profile/browser.db
2017-07-05 15:56:02.744 [Warning] [SwiftData.swift:160] transaction(synchronous:transactionClosure:) > BEGIN EXCLUSIVE failed.
2017-07-05 15:56:02.744 [Debug] [SwiftData.swift:601] closeCustomConnection(immediately:) > Closing custom connection for /private/var/mobile/Containers/Shared/AppGroup/7CFC3924-B25F-4F69-9424-9D3CD3D1C8D9/profile.profile/logins.db on <NSThread: 0x1740677c0>{number = 1, name = main}.
2017-07-05 15:56:02.749 [Debug] [SwiftData.swift:621] closeCustomConnection(immediately:) > Closed /private/var/mobile/Containers/Shared/AppGroup/7CFC3924-B25F-4F69-9424-9D3CD3D1C8D9/profile.profile/logins.db.
